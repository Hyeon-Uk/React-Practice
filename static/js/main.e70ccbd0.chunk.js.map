{"version":3,"sources":["fbase.js","component/AuthForm.js","routes/Auth.js","component/Nweet.js","component/NweetFactory.js","routes/Home.js","routes/Profile.js","component/Navigation.js","component/Router.js","component/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","event","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","undefined","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","arg","Boolean","currentUser","ReactDOM","render","document","getElementById"],"mappings":"oOAaAA,IAASC,cATc,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKJ,IAAMM,EAAiBT,IACjBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,U,OC4CxBC,EA5DE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEaF,mBAAS,IAFtB,mBAEZG,EAFY,KAEFC,EAFE,OAGiBJ,oBAAS,GAH1B,mBAGZK,EAHY,KAGAC,EAHA,OAION,mBAAS,IAJhB,mBAIZO,EAJY,KAILC,EAJK,KAKbC,EAAW,SAACC,GAAO,IAAD,EAGhBA,EADAC,OAAUC,EAFM,EAENA,KAAMC,EAFA,EAEAA,MAGP,UAATD,EACAV,EAASW,GAEK,aAATD,GACLR,EAAYS,IAOdC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAEM,iBADW,UAILX,EAJK,gCAKQZ,EAAYwB,+BAA+BhB,EAAOE,GAL1D,sDAQQV,EAAYyB,2BAA2BjB,EAAOE,GARtD,yEAWTK,EAAS,KAAIW,SAXJ,0DAAH,sDAed,OACI,qCACI,uBAAML,SAAUA,EAAUM,UAAU,YAApC,UACI,uBAAOX,SAAUA,EAAUW,UAAU,YACjCR,KAAK,QAAQS,KAAK,OAClBC,YAAY,QACZT,MAAOZ,EAAOsB,UAAQ,IAC1B,uBAAOd,SAAUA,EAAUW,UAAU,YACjCR,KAAK,WACLS,KAAK,WACLC,YAAY,WACZT,MAAOV,EAAUoB,UAAQ,IAC7B,uBAAOF,KAAK,SAASD,UAAU,uBAC3BP,MACIR,EAAa,iBAAmB,WAEvCE,GAAS,sBAAMa,UAAU,YAAhB,SAA6Bb,OAE3C,sBAAMiB,QArCQ,WAClBlB,GAAc,SAACmB,GAAD,OAAWA,MAoCSL,UAAU,aAAxC,SACKf,EAAa,UAAY,uB,gBCF3BqB,MA7Cf,WACI,IAAMC,EAAa,uCAAG,WAAOjB,GAAP,iBAAAK,EAAA,4DAOL,YAJLH,EAEJF,EAHAC,OACIC,MAKJgB,EAAW,IAAIpC,EAAiBE,KAAKmC,mBAEvB,WAATjB,IACLgB,EAAW,IAAIpC,EAAiBE,KAAKoC,oBAXvB,SAaZrC,EAAYsC,gBAAgBH,GAbhB,2CAAH,sDAkBnB,OACI,sBAAKR,UAAU,gBAAf,UACI,cAAC,IAAD,CACAY,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAACC,aAAa,MACrB,cAAC,EAAD,IACA,sBAAKjB,UAAU,WAAf,UACI,yBACAA,UAAU,UACVI,QAASG,EACTf,KAAK,SAHL,iCAIA,cAAC,IAAD,CAAiBoB,KAAMM,SAEvB,yBACAlB,UAAU,UACVI,QAASG,EACTf,KAAK,SAHL,iCAIA,cAAC,IAAD,CAAiBoB,KAAMO,gB,gBC0BxBC,EArED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACP1C,oBAAS,GADF,mBAC9B2C,EAD8B,KACrBC,EADqB,OAEL5C,mBAASyC,EAASI,MAFb,mBAE9BC,EAF8B,KAEpBC,EAFoB,KAI/BC,EAAa,uCAAG,sBAAAjC,EAAA,0DACPkC,OAAOC,QAAQ,+CADR,gCAGRvD,EAAUwD,IAAV,eAAsBV,EAASW,KAAMC,SAH7B,uBAIRxD,EAAeyD,WAAWb,EAASc,eAAeF,SAJ1C,2CAAH,qDAabG,EAAgB,kBAAMZ,GAAW,SAACnB,GAAD,OAAWA,MAE5CX,EAAQ,uCAAG,WAAO2C,GAAP,SAAA1C,EAAA,sDACb0C,EAAMzC,iBACNrB,EAAUwD,IAAV,eAAsBV,EAASW,KAAMM,OAAO,CACxCb,KAAMC,IAEVF,GAAW,GALE,2CAAH,sDASd,OACI,qBAAKxB,UAAU,QAAf,SACKuB,EACG,sBAAKvB,UAAU,sBAAf,UACI,uBAAMN,SAAUA,EAAUM,UAAU,sBAApC,UACI,uBACIA,UAAU,YACVG,UAAQ,EACRoC,WAAS,EACTlD,SAzBP,SAACgD,GACdA,EAAMzC,iBADkB,IAENH,EAAY4C,EAAtB9C,OAAUE,MAClBkC,EAAYlC,IAuBQQ,KAAK,OACLR,MAAOiC,EACPxB,YAAY,sBAChB,uBACIF,UAAU,UACVC,KAAK,SACLR,MAAM,qBAEd,wBACIO,UAAU,oBACVI,QAASgC,EAFb,uBAOA,qCACI,6BAAKf,EAASI,OACbJ,EAASc,eAAiB,qBAAKK,IAAKnB,EAASc,gBAC7Cb,GAAW,sBAAKtB,UAAU,iBAAf,UACR,sBAAMI,QAASwB,EAAf,SACI,cAAC,IAAD,CAAiBhB,KAAM6B,QAE3B,sBAAMrC,QAASgC,EAAf,SACI,cAAC,IAAD,CAAiBxB,KAAM8B,iB,QC2BxCC,EAvFM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACRhE,mBAAS,IADD,mBAC3BiE,EAD2B,KACpBC,EADoB,OAEElE,mBAAS,IAFX,mBAE3BmE,EAF2B,KAEfC,EAFe,KAG5BtD,EAAQ,uCAAG,WAAO2C,GAAP,qBAAA1C,EAAA,yDACC,KAAVkD,EADS,oDAEbR,EAAMzC,iBACFuC,EAAgB,GACD,KAAfY,EAJS,wBAKHE,EAAUxE,EAAeyE,MAAMC,MAArB,UAA8BP,EAAQQ,IAAtC,YAA6CC,gBALpD,SAMcJ,EAAQK,UAAUP,EAAY,YAN5C,cAMHQ,EANG,iBAOaA,EAASL,IAAIM,iBAP1B,QAOTrB,EAPS,sBASPd,EAAW,CACbI,KAAMoB,EACNY,SAAUC,KAAKC,MACfC,UAAWhB,EAAQQ,IACnBjB,iBAbS,UAeP5D,EAAUsF,WAAW,QAAQC,IAAIzC,GAf1B,QAgBbyB,EAAS,IACTE,EAAc,IAjBD,4CAAH,sDAgDd,OACI,uBAAMtD,SAAUA,EAAUM,UAAU,cAApC,UACI,sBAAKA,UAAU,0BAAf,UACI,uBACIA,UAAU,sBACVX,SAhCC,SAACgD,GAAW,IACP5C,EAAY4C,EAAtB9C,OAAUE,MAClBqD,EAASrD,IA+BGA,MAAOoD,EACP5C,KAAK,OACL8D,UAAU,MACV7D,YAAY,sBAChB,uBAAOD,KAAK,SAASR,MAAM,SAASO,UAAU,0BAElD,wBAAOgE,IAAI,cAAchE,UAAU,sBAAnC,UACI,6CACA,cAAC,IAAD,CAAiBY,KAAMqD,SAE3B,uBACIhE,KAAK,OACL+B,GAAG,cACHkC,OAAO,SACP7E,SA1CS,SAACgD,GAAW,IAEvB8B,EADwB9B,EAAtB9C,OAAU6E,MACI,GACtB,QAAgBC,IAAZF,EAAJ,CAIA,IAAMG,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IAG3BC,EAEJD,EAHAE,cACID,OAGR1B,EAAc0B,IAElBJ,EAAOM,cAAcT,QAZjBnB,EAAc,OAuCVhC,MAAO,CACH6D,QAAS,KAEhB9B,GACM,sBAAK/C,UAAU,0BAAf,UACC,qBAAKwC,IAAKO,EAAY/B,MAAO,CAAE8D,gBAAiB/B,KAChD,sBAAK/C,UAAU,qBAAqBI,QA/B1B,WACtB4C,EAAc,KA8BF,UACI,0CACA,cAAC,IAAD,CAAiBpC,KAAMmE,gBC3DhCC,MAvBf,YAA0B,IAAXpC,EAAU,EAAVA,QAAU,EACOhE,mBAAS,IADhB,mBACdqG,EADc,KACNC,EADM,KAYrB,OAVAC,qBAAU,WACN5G,EAAUsF,WAAW,QAAQuB,YAAW,SAAAC,GACpC,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAAAzD,GAAG,oBAClCC,GAAGD,EAAIC,IACJD,EAAI0D,WAEXP,EAAUI,QAEf,IAGH,sBAAKtF,UAAU,YAAf,UACI,cAAC,EAAD,CAAc4C,QAASA,IACvB,qBAAK5B,MAAO,CAAC0E,UAAU,IAAvB,SACKT,EAAOO,KAAI,SAAC3C,GAAD,OACR,cAAC,EAAD,CAAsBxB,SAAUwB,EAAOvB,QAASuB,EAAMe,YAAYhB,EAAQQ,KAA9DP,EAAMb,aC6BnB2D,MA/Cf,YAAyC,IAAvBC,EAAsB,EAAtBA,YAAYhD,EAAU,EAAVA,QACpBiD,EAAUC,cADoB,EAEKlH,mBAASgE,EAAQmD,aAFtB,mBAE7BC,EAF6B,KAEdC,EAFc,KAc9BvG,EAAQ,uCAAC,WAAO2C,GAAP,SAAA1C,EAAA,yDACX0C,EAAMzC,iBACHoG,IAAiBpD,EAAQmD,YAFjB,gCAGDnD,EAAQsD,cAAc,CACxBH,YAAYC,IAJT,OAOXJ,IAPW,2CAAD,sDAUd,OACI,sBAAK5F,UAAU,YAAf,UACA,uBAAMN,SAAUA,EAAUM,UAAU,cAApC,UACI,uBACAuC,WAAS,EACTvC,UAAU,YACVC,KAAK,OACLC,YAAY,cACZT,MAAOuG,EACP3G,SAzBO,SAACgD,GAAS,IAEjB5C,EACD4C,EAFI9C,OACHE,MAEJwG,EAAkBxG,MAsBd,uBACAuB,MAAO,CAAC0E,UAAU,IAClB1F,UAAU,UACVC,KAAK,SACLR,MAAM,sBAEN,sBACAO,UAAU,2BACVI,QAvCc,WAClB/B,EAAY8H,UACZN,EAAQO,KAAK,MAmCT,yBCNGC,EA/BI,SAAC,GAAiB,IAAfzD,EAAc,EAAdA,QAClB,OACI,8BACI,qBAAI5B,MAAO,CAAEsF,QAAS,OAAQC,eAAgB,SAAUb,UAAW,IAAnE,UACI,6BACI,cAAC,IAAD,CAAMc,GAAG,IAAIxF,MAAO,CAAEyF,YAAa,IAAnC,SACI,cAAC,IAAD,CAAiB7F,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAGjE,6BACI,eAAC,IAAD,CAAMyF,GAAG,WACLxF,MAAO,CACH0F,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,IANlB,UASI,cAAC,IAAD,CAAiBjG,KAAMkG,IAAQhG,MAAO,UAAWC,KAAK,OACtD,sBAAMC,MAAO,CAAC0E,UAAU,IAAxB,SACK9C,EAAQmD,YAAR,UACGnD,EAAQmD,YADX,kBAEA,uBCSdgB,EAhCG,SAAC,GAAsC,IAArCnB,EAAoC,EAApCA,YAAYoB,EAAwB,EAAxBA,WAAWpE,EAAa,EAAbA,QACvC,OACI,eAAC,IAAD,WACKoE,GAAY,cAAC,EAAD,CAAYpE,QAASA,IAClC,cAAC,IAAD,UAEQoE,EACI,sBAAKhG,MAAO,CACRiG,SAAS,IACTC,MAAM,OACNC,OAAO,SACPzB,UAAU,GACVY,QAAQ,OACRC,eAAe,UANnB,UAQI,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAMzE,QAASA,MAEnB,cAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,EAAD,CAASzE,QAASA,EAASgD,YAAaA,SAI5C,cAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,YCQjBC,MAnCf,WAAgB,IAAD,EACU1I,oBAAS,GADnB,mBACN2I,EADM,KACDC,EADC,OAEc5I,mBAAS,MAFvB,mBAENgE,EAFM,KAEE6E,EAFF,KA4Bb,OAzBAtC,qBAAU,WACR9G,EAAYqJ,oBAAmB,SAACC,GAE5BF,EADCE,EACU,CACT5B,YAAY4B,EAAK5B,YACjB3C,IAAIuE,EAAKvE,IACT8C,cAAc,SAAC0B,GAAD,OAAOD,EAAKzB,cAAc0B,KAI/B,MAEbJ,GAAQ,QAEV,IAYF,mCACGD,EAAK,cAAC,EAAD,CAAWP,WAAYa,QAAQjF,GAAUA,QAASA,EAASgD,YAXjD,WAChB,IAAM+B,EAAKtJ,EAAYyJ,YACvBL,EAAW,CACT1B,YAAY4B,EAAK5B,YACjB3C,IAAIuE,EAAKvE,IACT8C,cAAc,SAAC0B,GAAD,OAAOD,EAAKzB,cAAc0B,SAM8D,qB,MC7B5GG,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e70ccbd0.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    \r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance=firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\r\nimport { authService } from '../fbase';\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (e) => {\r\n        const {\r\n            target: { name, value }\r\n        } = e;\r\n\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        }\r\n        else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    }\r\n    const toggleAccount = () => {\r\n        setNewAccount((prev) => !prev);\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            }\r\n            else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input onChange={onChange} className=\"authInput\"\r\n                    name=\"email\" type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email} required />\r\n                <input onChange={onChange} className=\"authInput\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password} required/>\r\n                <input type=\"submit\" className=\"authInput authSubmit\"\r\n                    value={\r\n                        newAccount ? \"Create Account\" : \"Log In\"\r\n                    } />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport AuthForm from \"../component/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"../fbase\";\r\n\r\nfunction Auth() {\r\n    const onSocialClick = async (e) => {\r\n        const {\r\n            target: {\r\n                name\r\n            }\r\n        } = e;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }\r\n        else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon \r\n            icon={faTwitter} \r\n            color={\"#04AAFF\"} \r\n            size=\"3x\"\r\n            style={{marginBottom:30}}/>\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button \r\n                className=\"authBtn\"\r\n                onClick={onSocialClick} \r\n                name=\"google\">Continue With Google\r\n                <FontAwesomeIcon icon={faGoogle}/>\r\n                </button>\r\n                <button\r\n                className=\"authBtn\"\r\n                onClick={onSocialClick} \r\n                name=\"github\">Continue With Github\r\n                <FontAwesomeIcon icon={faGithub}/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Auth;","import React, { useState } from 'react';\r\nimport { dbService, storageService } from '../fbase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`nwit/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const { target: { value } } = event;\r\n        setNewNweet(value);\r\n    }\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        dbService.doc(`nwit/${nweetObj.id}`).update({\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <div className=\"container nweetEdit\">\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            className=\"formInput\"\r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            type=\"text\"\r\n                            value={newNweet}\r\n                            placeholder=\"Update your Nweet\" />\r\n                        <input\r\n                            className=\"formBtn\"\r\n                            type=\"submit\"\r\n                            value=\"Update Nweet!\" />\r\n                    </form>\r\n                    <button\r\n                        className=\"formBtn cancelBtn\"\r\n                        onClick={toggleEditing}>\r\n                        Cancel\r\n                         </button>\r\n                </div>\r\n            ) : (\r\n                    <>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl}/>}\r\n                        {isOwner && <div className=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash}/>\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt}/>\r\n                            </span>\r\n                        </div>}\r\n                    </>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\nexport default Nweet;","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from '../fbase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") return;\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await fileRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nwit\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNweet(value);\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        const { target: { files } } = event;\r\n        const theFile = files[0];\r\n        if (theFile === undefined) {\r\n            setAttachment(null);\r\n            return;\r\n        }\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {\r\n                    result\r\n                }\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => {\r\n        setAttachment(\"\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    onChange={onChange}\r\n                    value={nweet}\r\n                    type=\"text\"\r\n                    maxLength=\"120\"\r\n                    placeholder=\"What's your mind?\" />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput_arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add Photo</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                id=\"attach-file\"\r\n                accept=\"image/\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }} />\r\n            {attachment\r\n                && <div className=\"factoryForm__attachment\">\r\n                    <img src={attachment} style={{ backgroundImage: attachment }} />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </form>\r\n    );\r\n}\r\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\r\nimport Nweet from \"../component/Nweet\";\r\nimport { dbService} from \"../fbase\";\r\nimport NweetFactory from \"../component/NweetFactory\";\r\nfunction Home({userObj}) {\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(() => {\r\n        dbService.collection('nwit').onSnapshot(snapshot=>{\r\n            const nweetArray=snapshot.docs.map(doc=>({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n    <div className=\"container\">\r\n        <NweetFactory userObj={userObj}/>\r\n        <div style={{marginTop:30}}>\r\n            {nweets.map((nweet) => (\r\n                <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId===userObj.uid}></Nweet>\r\n            ))}\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Home;","import React ,{useEffect,useState}from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService, dbService } from \"../fbase\";\r\nfunction Profile({refreshUser,userObj}) {\r\n    const history = useHistory();\r\n    const [newDisplayName,setNewDisplayName]=useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange=(event)=>{\r\n        const {target:{\r\n            value\r\n        }}=event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit=async (event)=>{\r\n        event.preventDefault();\r\n        if(newDisplayName!==userObj.displayName){\r\n            await userObj.updateProfile({\r\n                displayName:newDisplayName\r\n            });\r\n        }\r\n        refreshUser();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input \r\n            autoFocus\r\n            className=\"formInput\"\r\n            type=\"text\"\r\n            placeholder=\"DisplayName\"\r\n            value={newDisplayName}\r\n            onChange={onChange}/>\r\n            <input\r\n            style={{marginTop:10}}\r\n            className=\"formBtn\"\r\n            type=\"submit\" \r\n            value=\"Update Profile\"/>\r\n        </form>\r\n            <span \r\n            className=\"formBtn cancelBtn logOut\"\r\n            onClick={onLogOutClick}>Log Out</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\"\r\n                        style={{\r\n                            marginLeft: 10,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            fontSize: 12,\r\n                        }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\"/>\r\n                        <span style={{marginTop:10}}>\r\n                            {userObj.displayName\r\n                            ?`${userObj.displayName}의 Profile`\r\n                            :\"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\nconst AppRouter = ({refreshUser,isLoggedIn,userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn&&<Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {\r\n                    isLoggedIn ? (\r\n                        <div style={{\r\n                            maxWidth:890,\r\n                            width:\"100%\",\r\n                            margin:\"0 auto\",\r\n                            marginTop:80,\r\n                            display:\"flex\",\r\n                            justifyContent:\"center\"\r\n                        }}>\r\n                            <Route exact path=\"/\">\r\n                                <Home userObj={userObj}></Home>\r\n                            </Route>\r\n                            <Route exact path=\"/profile\">\r\n                                <Profile userObj={userObj} refreshUser={refreshUser}></Profile>\r\n                            </Route>\r\n                        </div>\r\n                    ) : (\r\n                            <Route exact path=\"/\">\r\n                                <Auth></Auth>\r\n                            </Route>\r\n                        )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React,{useEffect, useState} from 'react';\r\nimport AppRouter from './Router';\r\nimport {authService} from \"../fbase\";\r\nfunction App() {\r\n  const [init,setInit] = useState(false);\r\n  const [userObj,setUserObj]=useState(null);\r\n  useEffect(()=>{\r\n    authService.onAuthStateChanged((user)=>{\r\n      if(user){\r\n        setUserObj({\r\n          displayName:user.displayName,\r\n          uid:user.uid,\r\n          updateProfile:(arg)=>user.updateProfile(arg),\r\n        });\r\n      }\r\n      else{\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  },[]);\r\n\r\n  const refreshUser=()=>{\r\n    const user=authService.currentUser;\r\n    setUserObj({\r\n      displayName:user.displayName,\r\n      uid:user.uid,\r\n      updateProfile:(arg)=>user.updateProfile(arg),\r\n    });\r\n  }\r\n\r\n  return (\r\n  <>\r\n    {init?<AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser}></AppRouter>:\"initializing...\"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './component/App';\r\nimport \"./styles.css\";\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}